package views {		import flash.display.Sprite;	import flash.events.MouseEvent;	import controllers.ClockController;	import models.ClockModel;			public class ControlsView extends Sprite {				private var _controller:ClockController;		private var _model:ClockModel;				public function ControlsView(aController:ClockController, aModel:ClockModel) {			_controller = aController;			_model = aModel;			//hours			HoursNext.addEventListener(MouseEvent.CLICK, handleHoursNext);			HoursPrev.addEventListener(MouseEvent.CLICK, handleHoursPrev);			//minutes			MinNext.addEventListener(MouseEvent.CLICK, handleMinNext);			MinPrev.addEventListener(MouseEvent.CLICK, handleMinPrev);			//seconds			SecNext.addEventListener(MouseEvent.CLICK, handleSecNext);			SecPrev.addEventListener(MouseEvent.CLICK, handleSecPrev);			//day			DayNext.addEventListener(MouseEvent.CLICK, handleDayNext);			DayPrev.addEventListener(MouseEvent.CLICK, handleDayPrev);			//month			MonthNext.addEventListener(MouseEvent.CLICK, handleMonthNext);			MonthPrev.addEventListener(MouseEvent.CLICK, handleMonthPrev);			//year			YearNext.addEventListener(MouseEvent.CLICK, handleYearNext);			YearPrev.addEventListener(MouseEvent.CLICK, handleYearPrev);		}				private function handleHoursNext(e:MouseEvent):void {			_controller.changeHours(1 + _model.hours);		}				private function handleHoursPrev(e:MouseEvent):void {			_controller.changeHours(_model.hours - 1);		}				private function handleMinNext(e:MouseEvent):void {			_controller.changeMins(1 + _model.minutes);		}				private function handleMinPrev(e:MouseEvent):void {			_controller.changeMins(_model.minutes - 1);		}				private function handleSecNext(e:MouseEvent):void {			_controller.changeSecs(1 + _model.seconds);		}				private function handleSecPrev(e:MouseEvent):void {			_controller.changeSecs(_model.seconds - 1);		}				private function handleDayNext(e:MouseEvent):void {			_controller.changeDay(1 + _model.day);		}				private function handleDayPrev(e:MouseEvent):void {			_controller.changeDay(_model.day - 1);		}				private function handleMonthNext(e:MouseEvent):void {			_controller.changeMonth(1 + _model.month);		}				private function handleMonthPrev(e:MouseEvent):void {			_controller.changeMonth(_model.month - 1);		}				private function handleYearNext(e:MouseEvent):void {			_controller.changeYear(1 + _model.year);		}				private function handleYearPrev(e:MouseEvent):void {			_controller.changeYear(_model.year - 1);		}	}	}